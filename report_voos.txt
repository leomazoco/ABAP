*&---------------------------------------------------------------------*
*& Report ZPR_LM_VOOS
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT zpr_lm_voos.

TYPE-POOLS slis.

TABLES: sflight,
        sbook.

TYPES: BEGIN OF ty_output,

         connid          TYPE sflight-connid,
         fldate          TYPE sflight-fldate,
         carrid          TYPE sflight-carrid,
         carrname        TYPE scarr-carrname,
         cityfrom        TYPE spfli-cityfrom,
         airpfrom        TYPE spfli-airpfrom,
         airportfrom(80) TYPE c,
         cityto          TYPE spfli-cityto,
         airpto          TYPE spfli-airpto,
         airportto(80)   TYPE c,
         currency        TYPE sflight-currency,
         price           TYPE sflight-price,

       END OF ty_output,

       BEGIN OF ty_passageiro,

         connid   TYPE sbook-connid,
         fldate   TYPE sbook-fldate,
         bookid   TYPE sbook-bookid,
         customid TYPE sbook-customid,
         custtype TYPE sbook-custtype,
         passname TYPE sbook-passname,
         cityfrom TYPE spfli-cityfrom,
         airpfrom TYPE spfli-airpfrom,
         "airport  TYPE sairport-name,
         cityto   TYPE spfli-cityto,
         airpto   TYPE spfli-airpto,


       END OF ty_passageiro.

DATA: it_output     TYPE STANDARD TABLE OF ty_output,
      it_passageiro TYPE STANDARD TABLE OF ty_passageiro,
      it_fieldcat   TYPE slis_t_fieldcat_alv.

DATA: wa_output     TYPE ty_output,
      wa_passageiro TYPE ty_passageiro,
      wa_layout     TYPE slis_layout_alv,
      wa_fieldcat   TYPE slis_fieldcat_alv.

DATA: gc_message_type_e TYPE c VALUE 'E' LENGTH 1.

******************** INFORMAÇÕES SOBRE O VOO *************************

SELECTION-SCREEN BEGIN OF BLOCK block1 WITH FRAME TITLE TEXT-001.

SELECT-OPTIONS: s_connid FOR sflight-connid. "CÓDIGO DO VOO

SELECT-OPTIONS: s_fldate FOR sflight-fldate. "DATA DO VOO

PARAMETERS: p_carrid TYPE spfli-carrid, "COMPANHIA AÉREA
            p_cityfr TYPE spfli-cityfrom, "CIDADE ORIGEM
            p_cityto TYPE spfli-cityto. "CIDADE DESTINO


SELECTION-SCREEN END OF BLOCK block1.

******************** INFORMAÇÕES SOBRE O VOO OU LISTA DE PASSAGEIROS *************************

SELECTION-SCREEN BEGIN OF BLOCK block2 WITH FRAME TITLE TEXT-002.

PARAMETERS: rb_voo  RADIOBUTTON GROUP g1 USER-COMMAND frad1 DEFAULT 'X',
            rb_pass RADIOBUTTON GROUP g1.

SELECTION-SCREEN END OF BLOCK block2.

******************** LISTA DE PASSAGEIROS *************************

SELECTION-SCREEN BEGIN OF BLOCK block3 WITH FRAME TITLE TEXT-003.

PARAMETERS: p_name TYPE sbook-passname MODIF ID t1.

SELECT-OPTIONS: s_cid  FOR sbook-customid MODIF ID t1,
                s_book FOR sbook-bookid MODIF ID t1.


SELECTION-SCREEN END OF BLOCK block3.

SELECTION-SCREEN BEGIN OF BLOCK block4 WITH FRAME TITLE TEXT-004.

PARAMETERS: rb_view  RADIOBUTTON GROUP g2 DEFAULT 'X',
            rb_press RADIOBUTTON GROUP g2.

SELECTION-SCREEN END OF BLOCK block4.

AT SELECTION-SCREEN OUTPUT.
  PERFORM: zf_modifica_tela.


START-OF-SELECTION.


  IF rb_voo EQ abap_true.

    PERFORM: zf_dados_voo.

  ELSE.

    PERFORM: zf_dados_passageiro.

  ENDIF.

  IF rb_view EQ abap_true.

    IF it_output IS NOT INITIAL.
      PERFORM: zf_alv_voos.
    ELSE.
      "MESSAGE s208(00) WITH 'NÃO FORAM ENCONTRADOS OS DADOS' DISPLAY LIKE 'E'.
    ENDIF.

    IF it_passageiro IS NOT INITIAL.

      PERFORM: zf_alv_passageiro.

    ENDIF.

  ENDIF.


*&---------------------------------------------------------------------*
*& Form ZF_DADOS_VOO
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM zf_dados_voo .

  SELECT a~carrid, a~connid, a~fldate, b~carrname, c~cityfrom, c~airpfrom, c~cityto, c~airpto, a~currency, a~price, d~name
  INTO TABLE @DATA(lt_voos)
  FROM sflight AS a INNER JOIN scarr AS b
  ON a~carrid EQ b~carrid
                    INNER JOIN spfli AS c
  ON a~connid EQ c~connid
                    INNER JOIN sairport AS d
  "ON c~airpfrom EQ d~id
    ON c~airpto EQ d~id
  WHERE a~connid IN @s_connid
    AND a~fldate IN @s_fldate.

  IF p_carrid IS NOT INITIAL.
    DELETE lt_voos WHERE carrid <> p_carrid.
  ENDIF.

  IF p_cityfr IS NOT INITIAL.
    DELETE lt_voos WHERE cityfrom <> p_cityfr.
  ENDIF.

  IF p_cityto IS NOT INITIAL.
    DELETE lt_voos WHERE cityto <> p_cityto.
  ENDIF.

  MOVE-CORRESPONDING lt_voos TO it_output.

*  IF lt_voos IS NOT INITIAL.
*    cl_demo_output=>display( lt_voos ).
*  ELSE.
*    MESSAGE s208(00) WITH 'NÃO FORAM ENCONTRADOS OS DADOS' DISPLAY LIKE 'E'.
*    EXIT.
*  ENDIF.


ENDFORM.

*&---------------------------------------------------------------------*
*& Form ZF_DADOS_PASSAGEIRO
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM zf_dados_passageiro .

  DATA(query) = '%' && to_upper( p_name ) && '%'.

  SELECT a~connid, a~fldate, a~bookid, a~customid, a~custtype, a~passname, b~cityfrom, b~airpfrom, b~cityto, b~airpto
    FROM sbook AS a INNER JOIN spfli AS b
    ON a~connid EQ b~connid
    WHERE a~connid    IN @s_connid
      AND a~fldate    IN @s_fldate
      AND a~customid  IN @s_cid
      AND a~bookid    IN @s_book  AND
      (
        (
            @p_name NE @space AND
            upper( passname ) LIKE @query
        ) OR
        @p_name EQ @space
      )
     INTO TABLE @DATA(lt_pass).

  MOVE-CORRESPONDING lt_pass TO it_passageiro.

  "cl_demo_output=>display( lt_pass ).

ENDFORM.

*&---------------------------------------------------------------------*
*& Form ZF_MODIFICA_TELA
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM zf_modifica_tela .

  IF rb_voo = 'X'.
    LOOP AT SCREEN.
      IF screen-group1 = 'T1'.
        screen-active = '0'.
        screen-input = 0.
      ELSEIF screen-group1 = 'T1'.
        screen-active = '1'.
      ENDIF.
      MODIFY SCREEN.
    ENDLOOP.
  ENDIF.

ENDFORM.

*&---------------------------------------------------------------------*
*& Form ZF_ALV_VOOS
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM zf_alv_voos .


  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'connid'.
  wa_fieldcat-seltext_m = TEXT-r01.
  wa_fieldcat-hotspot = abap_true.
  APPEND wa_fieldcat TO it_fieldcat.

  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'fldate'.
  wa_fieldcat-seltext_m = TEXT-r02.
  APPEND wa_fieldcat TO it_fieldcat.

  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'carrid'.
  wa_fieldcat-seltext_m = TEXT-r03.
  APPEND wa_fieldcat TO it_fieldcat.

  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'carrname'.
  wa_fieldcat-seltext_m = TEXT-r04.
  APPEND wa_fieldcat TO it_fieldcat.

  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'cityfrom'.
  wa_fieldcat-seltext_m = TEXT-r05.
  APPEND wa_fieldcat TO it_fieldcat.

  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'airpfrom'.
  wa_fieldcat-seltext_m = TEXT-r06.
  wa_fieldcat-do_sum = abap_true.
  APPEND wa_fieldcat TO it_fieldcat.

  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'airportfrom'.
  wa_fieldcat-seltext_m = TEXT-r07.
  APPEND wa_fieldcat TO it_fieldcat.

  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'cityto'.
  wa_fieldcat-seltext_m = TEXT-r08.
  wa_fieldcat-do_sum = abap_true.
  APPEND wa_fieldcat TO it_fieldcat.

  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'airpto'.
  wa_fieldcat-seltext_m = TEXT-r06.
  wa_fieldcat-hotspot = abap_true.
  APPEND wa_fieldcat TO it_fieldcat.

  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'airportto'.
  wa_fieldcat-seltext_m = TEXT-r07.
  APPEND wa_fieldcat TO it_fieldcat.

  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'currency'.
  wa_fieldcat-seltext_m = TEXT-r10.
  APPEND wa_fieldcat TO it_fieldcat.

  CLEAR wa_fieldcat.
  wa_fieldcat-fieldname = 'price'.
  wa_fieldcat-seltext_m = TEXT-r11.
  APPEND wa_fieldcat TO it_fieldcat.

  wa_layout-coltab_fieldname = 'CELL'.
  wa_layout-colwidth_optimize = abap_true.

  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
    EXPORTING
*     i_callback_program      = sy-repid
*     i_callback_user_command = 'USER_COMMAND'
*     i_callback_top_of_page  = 'ZF_TOP_OF_PAGE'
      is_layout   = wa_layout
      it_fieldcat = it_fieldcat
    TABLES
      t_outtab    = it_output.
  IF sy-subrc <> 0.
* Implement suitable error handling here
  ENDIF.


ENDFORM.

*&---------------------------------------------------------------------*
*& Form ZF_ALV_PASSAGEIRO
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM zf_alv_passageiro .

  DATA: lt_fieldcat TYPE lvc_t_fcat.
  DATA: lw_layout   TYPE lvc_s_layo.
  DATA: lw_saida TYPE ty_passageiro.

  lw_layout-cwidth_opt = abap_true.

  CALL FUNCTION 'STRALAN_FIELDCAT_CREATE'
    EXPORTING
      is_structure = lw_saida
    IMPORTING
      et_fieldcat  = lt_fieldcat.

  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY_LVC'
    EXPORTING
      it_fieldcat_lvc = lt_fieldcat
    TABLES
      t_outtab        = it_passageiro
    EXCEPTIONS
      program_error   = 1
      OTHERS          = 2.
  IF sy-subrc NE 0.
    MESSAGE s208(00) DISPLAY LIKE sy-abcde+4(1) WITH TEXT-e02.
  ENDIF.


ENDFORM.